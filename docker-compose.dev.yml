services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: immune-me-backend-dev
    restart: unless-stopped
    depends_on:
      - db
    environment:
      TZ: UTC
      PORT: 3333
      HOST: 0.0.0.0
      NODE_ENV: development
      APP_KEY: ${APP_KEY}
      DB_CONNECTION: pg
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      LOG_LEVEL: debug
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - immune-me-network
    command: ["node", "ace", "serve", "--watch"]

  # Frontend service
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: immune-me-frontend-dev
  #   restart: unless-stopped
  #   depends_on:
  #     - backend
  #   environment:
  #     NODE_ENV: development
  #     EXPO_DEVTOOLS_LISTEN_ADDRESS: 0.0.0.0
  #   ports:
  #     - "19000:19000"
  #     - "19001:19001"
  #     - "19002:19002"
  #     - "8081:8081"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   networks:
  #     - immune-me-network
  #   command: ["npm", "run", "web"]

  # Database service
  db:
    image: postgres:15-alpine
    container_name: immune-me-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    networks:
      - immune-me-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  immune-me-network:
    driver: bridge

volumes:
  postgres-data-dev:
    driver: local